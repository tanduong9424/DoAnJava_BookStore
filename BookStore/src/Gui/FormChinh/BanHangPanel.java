/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Gui.FormChinh;


import Bus.Impl.BanHanglmpl;
import Bus.Impl.KhuyenMailmpl;
import Dao.SACHDAO;
import Dto.HOADON;
import Dto.KHACHANG;
import Dto.KHUYENMAI;
import Dto.NHANVIEN;
import Dto.SACH;
import Dto.TAIKHOAN;
import Gui.FormAdd.AddKhachHang;
import Gui.FormNhapSL.PanelNhapSL_BanHang;
import java.awt.Image;
import java.time.LocalDate;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import java.sql.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/**
 *
 * @author DELL
 */
public class BanHangPanel extends javax.swing.JPanel {
    int status=0;
    int selected_sach_row=0;
    int ma_clicked_hoadon=0;
    BanHanglmpl banhang=new BanHanglmpl();
    
    /**
     * Creates new form BanHangPanel
     */

    public BanHangPanel() {
        initComponents();
        submit.setVisible(false);
        xoaspbtn.setVisible(false);
    }
    public void loadBooksToTable() {
        DefaultTableModel model = (DefaultTableModel) Sachtb.getModel();
        model.setRowCount(0);

        try {
            
            banhang.danhSachSanPham(model);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    public void loadHOADONToTable() {
        DefaultTableModel model = (DefaultTableModel) dataHoadon.getModel();
        model.setRowCount(0);

        try {
            
            banhang.danhSachHoaDon(model);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }    
    public void loadCHITIETHOADONToTable(HOADON t) {
        DefaultTableModel model = (DefaultTableModel) selectedSach.getModel();
        // Xóa tất cả các dòng cũ trong bảng trước khi load dữ liệu mới
        model.setRowCount(0);

        try {
            
            banhang.chiTietHoaDon(t,model,sum);    
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }  
public ImageIcon resizeImage(ImageIcon icon, int maxWidth, int maxHeight) {
    Image image = icon.getImage();
    int width = image.getWidth(null);
    int height = image.getHeight(null);
    
    // Kiểm tra kích thước của hình ảnh và điều chỉnh nếu cần
    if (width > maxWidth || height > maxHeight) {
        double scale = Math.min((double) maxWidth / width, (double) maxHeight / height);
        width = (int) (width * scale);
        height = (int) (height * scale);
        
        // Thay đổi kích thước hình ảnh
        image = image.getScaledInstance(width, height, Image.SCALE_SMOOTH);
    }
    
    // Tạo ImageIcon mới với kích thước đã được điều chỉnh
    return new ImageIcon(image);
}
public void loadAnh(SACH t) {
    String url = t.getIMAGE(); // Lấy đường dẫn ảnh từ đối tượng SACH
    
    try {
        if(url !=null){
            // Tạo một đối tượng ImageIcon từ đường dẫn ảnh
            ImageIcon icon = new ImageIcon(url);

            // Đặt hình ảnh lên jLabel1
            ImageIcon result=resizeImage(icon,180,273);
            img.setIcon(result);
        }
         else {
            img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Book_img/img_default.jpg")));
        }        
    } catch (Exception ex) {
        // Nếu có lỗi xảy ra, in ra thông báo lỗi
        ex.printStackTrace();
    }
} 
public void loadtongtien(){
    int tongtien=0;
    for(int i=0;i<selectedSach.getRowCount();i++){
        tongtien+=(int) selectedSach.getValueAt(i, 4);
        
    }
    sum.setText(""+tongtien);
}
public void loadKhachHang(){
            BanHanglmpl banhang=new BanHanglmpl();
            banhang.danhsachKhachHang(comboxKH);
}
public void loadNhanVien(NHANVIEN nvDM){
        int manv=nvDM.getManv();
        nv.setText(manv+"");
}
public void loadKhuyenMai(){
    int tongtien=0;
    if(!(sum.getText()).isEmpty()){
        tongtien=Integer.parseInt(sum.getText());
    }

    KhuyenMailmpl km=new KhuyenMailmpl();
    km.danhsachKhuyenMai(comboxKH1,tongtien);
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectKH = new javax.swing.ButtonGroup();
        HoaDon = new javax.swing.JPanel();
        search1 = new javax.swing.JButton();
        searchHoaDon = new javax.swing.JTextField();
        scroll1 = new javax.swing.JScrollPane();
        dataHoadon = new javax.swing.JTable();
        Finish = new javax.swing.JButton();
        DanhSachSP = new javax.swing.JPanel();
        scroll22 = new javax.swing.JScrollPane();
        Sachtb = new javax.swing.JTable();
        search2 = new javax.swing.JButton();
        searchSach = new javax.swing.JTextField();
        panelImg = new javax.swing.JPanel();
        img = new javax.swing.JLabel();
        ThongTinBanHang = new javax.swing.JPanel();
        ttKH = new javax.swing.JLabel();
        ttNV = new javax.swing.JLabel();
        comboxKH = new javax.swing.JComboBox<>();
        nv = new javax.swing.JTextField();
        newKH = new javax.swing.JButton();
        ThemBtn = new javax.swing.JButton();
        XoaBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        comboxKH1 = new javax.swing.JComboBox<>();
        ChiTietHD = new javax.swing.JPanel();
        tongtien = new javax.swing.JLabel();
        sum = new javax.swing.JTextField();
        scroll3 = new javax.swing.JScrollPane();
        selectedSach = new javax.swing.JTable();
        xoaspbtn = new javax.swing.JButton();
        submit = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 153));
        setPreferredSize(new java.awt.Dimension(1250, 750));

        HoaDon.setBackground(new java.awt.Color(0, 204, 204));

        search1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-magnifying-glass-30.png"))); // NOI18N
        search1.setToolTipText("Tìm kiếm");
        search1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        search1.setBorderPainted(false);
        search1.setContentAreaFilled(false);
        search1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search1ActionPerformed(evt);
            }
        });

        searchHoaDon.setBackground(new java.awt.Color(204, 255, 204));
        searchHoaDon.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm Kiếm Hóa Đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(0, 51, 51))); // NOI18N
        searchHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchHoaDonActionPerformed(evt);
            }
        });

        scroll1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hóa đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(0, 51, 51))); // NOI18N

        dataHoadon.setAutoCreateRowSorter(true);
        dataHoadon.setBackground(new java.awt.Color(204, 255, 204));
        dataHoadon.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        dataHoadon.setForeground(new java.awt.Color(0, 51, 51));
        dataHoadon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Hóa Đơn", "Mã Nhân Viên", "Tên Tài Khoản", "Ngày lập", "Mã khuyế mãi", "% giảm giá", "Tổng tiền", "tttk"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dataHoadon.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        dataHoadon.setShowGrid(true);
        dataHoadon.setSurrendersFocusOnKeystroke(true);
        dataHoadon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataHoadonMouseClicked(evt);
            }
        });
        scroll1.setViewportView(dataHoadon);

        Finish.setBackground(new java.awt.Color(204, 255, 204));
        Finish.setForeground(new java.awt.Color(0, 51, 51));
        Finish.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_ok_30px.png"))); // NOI18N
        Finish.setText("Xong");
        Finish.setToolTipText("Hoàn trả hoặc thanh toán hóa đơn");
        Finish.setHideActionText(true);
        Finish.setMaximumSize(new java.awt.Dimension(130, 37));
        Finish.setMinimumSize(new java.awt.Dimension(130, 37));
        Finish.setPreferredSize(new java.awt.Dimension(130, 37));
        Finish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinishActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HoaDonLayout = new javax.swing.GroupLayout(HoaDon);
        HoaDon.setLayout(HoaDonLayout);
        HoaDonLayout.setHorizontalGroup(
            HoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(HoaDonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HoaDonLayout.createSequentialGroup()
                        .addComponent(scroll1)
                        .addContainerGap())
                    .addGroup(HoaDonLayout.createSequentialGroup()
                        .addComponent(searchHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(search1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Finish, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))))
        );
        HoaDonLayout.setVerticalGroup(
            HoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HoaDonLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(HoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(search1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(HoaDonLayout.createSequentialGroup()
                        .addComponent(Finish, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(scroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        DanhSachSP.setBackground(new java.awt.Color(0, 204, 204));

        scroll22.setBackground(new java.awt.Color(0, 204, 204));
        scroll22.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh Sách Sản Phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(0, 51, 51))); // NOI18N

        Sachtb.setBackground(new java.awt.Color(204, 255, 204));
        Sachtb.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Sachtb.setForeground(new java.awt.Color(0, 51, 51));
        Sachtb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Sách", "Tên Sách", "Số Lượng Còn Lại", "Đơn giá", "Nhà Xuất Bản"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Long.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Sachtb.setShowGrid(true);
        Sachtb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SachtbMouseClicked(evt);
            }
        });
        scroll22.setViewportView(Sachtb);
        if (Sachtb.getColumnModel().getColumnCount() > 0) {
            Sachtb.getColumnModel().getColumn(0).setResizable(false);
            Sachtb.getColumnModel().getColumn(1).setResizable(false);
            Sachtb.getColumnModel().getColumn(2).setResizable(false);
            Sachtb.getColumnModel().getColumn(3).setResizable(false);
            Sachtb.getColumnModel().getColumn(4).setResizable(false);
        }

        search2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-magnifying-glass-30.png"))); // NOI18N
        search2.setToolTipText("Tìm kiếm");
        search2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        search2.setBorderPainted(false);
        search2.setContentAreaFilled(false);
        search2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search2ActionPerformed(evt);
            }
        });

        searchSach.setBackground(new java.awt.Color(204, 255, 204));
        searchSach.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm Kiếm Sách", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(0, 51, 51))); // NOI18N
        searchSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchSachActionPerformed(evt);
            }
        });

        panelImg.setBackground(new java.awt.Color(204, 255, 204));
        panelImg.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ảnh minh họa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(0, 51, 51))); // NOI18N

        img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Book_img/img_default.png"))); // NOI18N

        javax.swing.GroupLayout panelImgLayout = new javax.swing.GroupLayout(panelImg);
        panelImg.setLayout(panelImgLayout);
        panelImgLayout.setHorizontalGroup(
            panelImgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelImgLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(img)
                .addGap(0, 0, 0))
        );
        panelImgLayout.setVerticalGroup(
            panelImgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImgLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(img)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout DanhSachSPLayout = new javax.swing.GroupLayout(DanhSachSP);
        DanhSachSP.setLayout(DanhSachSPLayout);
        DanhSachSPLayout.setHorizontalGroup(
            DanhSachSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DanhSachSPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DanhSachSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DanhSachSPLayout.createSequentialGroup()
                        .addComponent(searchSach, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(search2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(DanhSachSPLayout.createSequentialGroup()
                        .addComponent(scroll22, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelImg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        DanhSachSPLayout.setVerticalGroup(
            DanhSachSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DanhSachSPLayout.createSequentialGroup()
                .addGroup(DanhSachSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(DanhSachSPLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelImg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DanhSachSPLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(DanhSachSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(searchSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scroll22, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)))
                .addContainerGap())
        );

        ThongTinBanHang.setBackground(new java.awt.Color(0, 204, 204));
        ThongTinBanHang.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông Tin Bán Hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(0, 51, 51))); // NOI18N
        ThongTinBanHang.setForeground(new java.awt.Color(0, 51, 51));
        ThongTinBanHang.setFocusable(false);

        ttKH.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ttKH.setForeground(new java.awt.Color(0, 51, 51));
        ttKH.setText("Khách Hàng Mua");

        ttNV.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ttNV.setForeground(new java.awt.Color(0, 51, 51));
        ttNV.setText("Nhân Viên");

        comboxKH.setBackground(new java.awt.Color(204, 255, 204));
        comboxKH.setForeground(new java.awt.Color(0, 51, 51));
        comboxKH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Khách hàng 1", "Khách hàng 2", "Khách hàng 3", "Khách hàng4", " " }));
        comboxKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboxKHActionPerformed(evt);
            }
        });

        nv.setEditable(false);
        nv.setBackground(new java.awt.Color(204, 255, 204));
        nv.setForeground(new java.awt.Color(0, 51, 51));
        nv.setText("28");
        nv.setFocusable(false);
        nv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nvActionPerformed(evt);
            }
        });

        newKH.setBackground(new java.awt.Color(204, 255, 204));
        newKH.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        newKH.setForeground(new java.awt.Color(0, 51, 51));
        newKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_user_30px.png"))); // NOI18N
        newKH.setText("Thêm Mới Khách Hàng");
        newKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newKHActionPerformed(evt);
            }
        });

        ThemBtn.setBackground(new java.awt.Color(204, 255, 204));
        ThemBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ThemBtn.setForeground(new java.awt.Color(0, 51, 51));
        ThemBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_add_30px.png"))); // NOI18N
        ThemBtn.setText("Thêm Hóa Đơn");
        ThemBtn.setToolTipText("Thêm mới hóa đơn bán hàng");
        ThemBtn.setHideActionText(true);
        ThemBtn.setMaximumSize(new java.awt.Dimension(130, 37));
        ThemBtn.setMinimumSize(new java.awt.Dimension(130, 37));
        ThemBtn.setPreferredSize(new java.awt.Dimension(130, 37));
        ThemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemBtnActionPerformed(evt);
            }
        });

        XoaBtn.setBackground(new java.awt.Color(204, 255, 204));
        XoaBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        XoaBtn.setForeground(new java.awt.Color(0, 51, 51));
        XoaBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_delete_30px_1.png"))); // NOI18N
        XoaBtn.setText("Xóa Hóa Đơn");
        XoaBtn.setToolTipText("Xóa hóa đơn bị lỗi");
        XoaBtn.setMaximumSize(new java.awt.Dimension(130, 37));
        XoaBtn.setMinimumSize(new java.awt.Dimension(130, 37));
        XoaBtn.setPreferredSize(new java.awt.Dimension(130, 37));
        XoaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XoaBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 51));
        jLabel2.setText("Mã Khuyến Mãi");

        comboxKH1.setBackground(new java.awt.Color(204, 255, 204));
        comboxKH1.setForeground(new java.awt.Color(0, 51, 51));
        comboxKH1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KM1", "KM2" }));
        comboxKH1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboxKH1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ThongTinBanHangLayout = new javax.swing.GroupLayout(ThongTinBanHang);
        ThongTinBanHang.setLayout(ThongTinBanHangLayout);
        ThongTinBanHangLayout.setHorizontalGroup(
            ThongTinBanHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ThongTinBanHangLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(ThongTinBanHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ThongTinBanHangLayout.createSequentialGroup()
                        .addComponent(ttNV, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(nv, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(newKH)
                    .addGroup(ThongTinBanHangLayout.createSequentialGroup()
                        .addComponent(ThemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(XoaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ThongTinBanHangLayout.createSequentialGroup()
                        .addGroup(ThongTinBanHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ttKH, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ThongTinBanHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboxKH1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboxKH, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(165, Short.MAX_VALUE))
        );
        ThongTinBanHangLayout.setVerticalGroup(
            ThongTinBanHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ThongTinBanHangLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(ThongTinBanHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ttNV)
                    .addComponent(nv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ThongTinBanHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ttKH)
                    .addComponent(comboxKH, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ThongTinBanHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboxKH1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(30, 30, 30)
                .addComponent(newKH, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ThongTinBanHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ThemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(XoaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ChiTietHD.setBackground(new java.awt.Color(0, 204, 204));
        ChiTietHD.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chi Tiết Hóa Đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(0, 51, 51))); // NOI18N
        ChiTietHD.setFocusable(false);

        tongtien.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tongtien.setForeground(new java.awt.Color(0, 51, 51));
        tongtien.setText("Tổng tiền (VND)");

        sum.setEditable(false);
        sum.setBackground(new java.awt.Color(204, 255, 204));
        sum.setFocusable(false);

        scroll3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh Sách Sản Phẩm Đã Chọn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(0, 51, 51))); // NOI18N

        selectedSach.setBackground(new java.awt.Color(204, 255, 204));
        selectedSach.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        selectedSach.setForeground(new java.awt.Color(0, 51, 51));
        selectedSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Sách", "Tên Sách", "Số Lượng", "Đơn Giá", "Thành Tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        selectedSach.setShowGrid(true);
        selectedSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectedSachMouseClicked(evt);
            }
        });
        scroll3.setViewportView(selectedSach);
        if (selectedSach.getColumnModel().getColumnCount() > 0) {
            selectedSach.getColumnModel().getColumn(0).setResizable(false);
            selectedSach.getColumnModel().getColumn(1).setResizable(false);
            selectedSach.getColumnModel().getColumn(2).setResizable(false);
            selectedSach.getColumnModel().getColumn(3).setResizable(false);
            selectedSach.getColumnModel().getColumn(4).setResizable(false);
        }

        xoaspbtn.setBackground(new java.awt.Color(204, 255, 204));
        xoaspbtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        xoaspbtn.setForeground(new java.awt.Color(0, 51, 51));
        xoaspbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_delete_30px_1.png"))); // NOI18N
        xoaspbtn.setText("Xóa Sản Phẩm");
        xoaspbtn.setToolTipText("Xóa hóa đơn bị lỗi");
        xoaspbtn.setMaximumSize(new java.awt.Dimension(130, 37));
        xoaspbtn.setMinimumSize(new java.awt.Dimension(130, 37));
        xoaspbtn.setPreferredSize(new java.awt.Dimension(130, 37));
        xoaspbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                xoaspbtnMouseClicked(evt);
            }
        });
        xoaspbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaspbtnActionPerformed(evt);
            }
        });

        submit.setBackground(new java.awt.Color(204, 255, 204));
        submit.setForeground(new java.awt.Color(0, 51, 51));
        submit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_ok_30px.png"))); // NOI18N
        submit.setText("Hoàn tất");
        submit.setToolTipText("Thêm mới hóa đơn bán hàng");
        submit.setHideActionText(true);
        submit.setMaximumSize(new java.awt.Dimension(130, 37));
        submit.setMinimumSize(new java.awt.Dimension(130, 37));
        submit.setPreferredSize(new java.awt.Dimension(130, 37));
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ChiTietHDLayout = new javax.swing.GroupLayout(ChiTietHD);
        ChiTietHD.setLayout(ChiTietHDLayout);
        ChiTietHDLayout.setHorizontalGroup(
            ChiTietHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChiTietHDLayout.createSequentialGroup()
                .addGroup(ChiTietHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ChiTietHDLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(tongtien)
                        .addGap(18, 18, 18)
                        .addComponent(sum, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ChiTietHDLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(xoaspbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ChiTietHDLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(scroll3, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ChiTietHDLayout.setVerticalGroup(
            ChiTietHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChiTietHDLayout.createSequentialGroup()
                .addGroup(ChiTietHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xoaspbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(scroll3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(ChiTietHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tongtien)
                    .addComponent(sum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(DanhSachSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ThongTinBanHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(HoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChiTietHD, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(HoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ChiTietHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DanhSachSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ThongTinBanHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void search1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search1ActionPerformed
    // Lấy nội dung từ JTextField
    String searchText = searchHoaDon.getText();
    loadHOADONToTable();
    DefaultTableModel model = (DefaultTableModel) dataHoadon.getModel();
    // Kiểm tra xem searchText có rỗng không
    
    banhang.timHoaDon(dataHoadon, searchText,model);
    }//GEN-LAST:event_search1ActionPerformed

    private void dataHoadonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataHoadonMouseClicked
        // TODO add your handling code here:
        int row = dataHoadon.rowAtPoint(evt.getPoint());
        if (row >= 0) { // Chỉ xử lý khi chọn hàng hợp lệ
            String maHoaDonStr = dataHoadon.getValueAt(row, 0).toString(); // Lấy giá trị của cột "Mã Hóa Đơn"
            int maHoaDon = Integer.parseInt(maHoaDonStr); // Chuyển đổi thành số nguyên
            ma_clicked_hoadon=maHoaDon;
            HOADON hd = new HOADON(maHoaDon);
            loadCHITIETHOADONToTable(hd);
        }

    }//GEN-LAST:event_dataHoadonMouseClicked

    private void comboxKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboxKHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboxKHActionPerformed

    private void nvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nvActionPerformed

    private void newKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newKHActionPerformed
        // TODO add your handling code here:
        AddKhachHang x=new AddKhachHang(this);
        x.setVisible(true);
    }//GEN-LAST:event_newKHActionPerformed

    private void ThemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemBtnActionPerformed
        // TODO add your handling code here:
        submit.setVisible(true);
        xoaspbtn.setVisible(true);
        DefaultTableModel model = (DefaultTableModel) selectedSach.getModel();
        // Xóa tất cả các dòng cũ trong bảng trước khi load dữ liệu mới
        model.setRowCount(0);
        status=1;

    }//GEN-LAST:event_ThemBtnActionPerformed

    private void XoaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XoaBtnActionPerformed
        // TODO add your handling code here:
        if(ma_clicked_hoadon!=0){
                
                HOADON t=new HOADON(ma_clicked_hoadon);
                banhang.XoaHoaDonDatabase(t);
        }
        loadHOADONToTable();
        DefaultTableModel model = (DefaultTableModel) selectedSach.getModel();
        // Xóa tất cả các dòng cũ trong bảng trước khi load dữ liệu mới
        model.setRowCount(0);
        loadBooksToTable();
    }//GEN-LAST:event_XoaBtnActionPerformed

    private void search2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search2ActionPerformed
        // TODO add your handling code here:
                // Lấy nội dung từ JTextField
        String searchText = searchSach.getText();
        loadBooksToTable();
        DefaultTableModel model = (DefaultTableModel) Sachtb.getModel();

        banhang.timSanPham(Sachtb, searchText,model);        
    }//GEN-LAST:event_search2ActionPerformed

    private void xoaspbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaspbtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dataModel=(DefaultTableModel) this.selectedSach.getModel();
        if(selected_sach_row>0){
            
            banhang.BoChiTietHoaDon(dataModel, selected_sach_row);
        }
    }//GEN-LAST:event_xoaspbtnActionPerformed
    
    public static String extractMakhFromString(String input) {
        // Biểu thức chính quy để tìm chuỗi makh=xxxx
        Pattern pattern = Pattern.compile("(\\d+)-([^\\s]+)");
        Matcher matcher = pattern.matcher(input);


        if (matcher.find()) {
            return matcher.group(1); // Trả về phần trùng khớp đầu tiên, tức là số sau dấu '='
        } else {
            // Không tìm thấy makh trong chuỗi
            return null; // hoặc bạn có thể trả về một giá trị mặc định hoặc thông báo lỗi tùy ý
        }
    }    
    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:
        submit.setVisible(false);
        xoaspbtn.setVisible(false);
        DefaultTableModel dataModel = (DefaultTableModel) selectedSach.getModel();
        if(status==1 && dataModel.getRowCount()>0){
            int tongtien=Integer.parseInt(sum.getText());
            int manv=Integer.parseInt(nv.getText());
            String makhStr= extractMakhFromString((String)comboxKH.getSelectedItem());
            System.out.println("makh: "+makhStr);
            int makh=Integer.parseInt(makhStr);
            LocalDate today = LocalDate.now();
            Date sqlDate = Date.valueOf(today);
            String makmStr=extractMakhFromString((String) comboxKH1.getSelectedItem());
            int makm=Integer.parseInt(makmStr);
            KHUYENMAI km=new KHUYENMAI(makm);
            NHANVIEN nv=new NHANVIEN(manv);
            KHACHANG tk=new KHACHANG(makh);
            HOADON t=new HOADON(makh,manv,sqlDate,tongtien,false);
            DefaultTableModel model = (DefaultTableModel) dataHoadon.getModel();
            BanHanglmpl banhang=new BanHanglmpl();
            banhang.TaoHoaDonDatabase(t, nv, tk,km, dataModel);
        }
        status=0;
//        banhang.danhSachHoaDon(model);
        loadHOADONToTable();
    }//GEN-LAST:event_submitActionPerformed

    private void searchSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchSachActionPerformed

    private void SachtbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SachtbMouseClicked
                // TODO add your handling code here:
        int row = Sachtb.rowAtPoint(evt.getPoint());
        if (row >= 0) { // Chỉ xử lý khi chọn hàng hợp lệ
            if(status==0){
            String maHoaDonStr = Sachtb.getValueAt(row, 0).toString(); // Lấy giá trị của cột "Mã Hóa Đơn"
            int maHoaDon = Integer.parseInt(maHoaDonStr); // Chuyển đổi thành số nguyên
            SACH hd = new SACH(maHoaDon);
            SACH R=SACHDAO.getInstance().selectById(hd);
            loadAnh(R);
            }
            else{
                String maSachStr = Sachtb.getValueAt(row, 0).toString(); // Lấy giá trị của cột "Mã Hóa Đơn"
                String tenSachStr = Sachtb.getValueAt(row, 1).toString(); // Lấy giá trị của cột "Tên Sách"
                String SLconStr = Sachtb.getValueAt(row, 2).toString(); // Lấy giá trị của cột "Số Lượng còn"
                String DonGiaStr = Sachtb.getValueAt(row, 3).toString(); // Lấy giá trị của cột "Đơn Giá"
                String NXBStr = Sachtb.getValueAt(row, 4).toString(); // Lấy giá trị của cột "Nhà Xuất Bản"
            PanelNhapSL_BanHang x=new PanelNhapSL_BanHang(this,selectedSach,maSachStr,tenSachStr ,DonGiaStr,NXBStr);
                x.setVisible(true);
                x.setThongTinPanel(maSachStr,tenSachStr ,DonGiaStr,NXBStr);
            }
        }

    }//GEN-LAST:event_SachtbMouseClicked

    private void searchHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchHoaDonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchHoaDonActionPerformed

    private void selectedSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectedSachMouseClicked
        // TODO add your handling code here:
        selected_sach_row = selectedSach.rowAtPoint(evt.getPoint());
    }//GEN-LAST:event_selectedSachMouseClicked

    private void comboxKH1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboxKH1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboxKH1ActionPerformed

    private void xoaspbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xoaspbtnMouseClicked
        // TODO add your handling code here:
            DefaultTableModel dataModel=(DefaultTableModel) selectedSach.getModel();
            BanHanglmpl banhang=new BanHanglmpl();
            banhang.BoChiTietHoaDon(dataModel, selected_sach_row);
    }//GEN-LAST:event_xoaspbtnMouseClicked

    private void FinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinishActionPerformed
        // TODO add your handling code here:
        HOADON t=new HOADON(ma_clicked_hoadon);
        BanHanglmpl banhang=new BanHanglmpl();
        banhang.HOANTHANHHOADON(t);
        loadHOADONToTable();
        loadBooksToTable();
    }//GEN-LAST:event_FinishActionPerformed
    public void hide_button(){
        XoaBtn.setVisible(false);
        newKH.setVisible(false);
        Finish.setVisible(false);
        ThemBtn.setVisible(false);
        newKH.setVisible(false);
        ttNV.setVisible(false);
        nv.setVisible(false);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ChiTietHD;
    private javax.swing.JPanel DanhSachSP;
    private javax.swing.JButton Finish;
    private javax.swing.JPanel HoaDon;
    private javax.swing.JTable Sachtb;
    private javax.swing.JButton ThemBtn;
    private javax.swing.JPanel ThongTinBanHang;
    private javax.swing.JButton XoaBtn;
    private javax.swing.JComboBox<String> comboxKH;
    private javax.swing.JComboBox<String> comboxKH1;
    private javax.swing.JTable dataHoadon;
    private javax.swing.JLabel img;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton newKH;
    private javax.swing.JTextField nv;
    private javax.swing.JPanel panelImg;
    private javax.swing.JScrollPane scroll1;
    private javax.swing.JScrollPane scroll22;
    private javax.swing.JScrollPane scroll3;
    private javax.swing.JButton search1;
    private javax.swing.JButton search2;
    private javax.swing.JTextField searchHoaDon;
    private javax.swing.JTextField searchSach;
    private javax.swing.ButtonGroup selectKH;
    private javax.swing.JTable selectedSach;
    private javax.swing.JButton submit;
    private javax.swing.JTextField sum;
    private javax.swing.JLabel tongtien;
    private javax.swing.JLabel ttKH;
    private javax.swing.JLabel ttNV;
    private javax.swing.JButton xoaspbtn;
    // End of variables declaration//GEN-END:variables
}
